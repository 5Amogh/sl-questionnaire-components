{"version":3,"file":"sl-questionnaire.js","sources":["ng://sl-questionnaire/lib/services/translate.service.ts","ng://sl-questionnaire/lib/interfaces/questionnaire.type.ts","ng://sl-questionnaire/lib/services/sl-questionnaire.service.ts","ng://sl-questionnaire/lib/text-input/text-input.component.ts","ng://sl-questionnaire/lib/date-input/date-input.component.ts","ng://sl-questionnaire/lib/number-input/number-input.component.ts","ng://sl-questionnaire/lib/range-input/range-input.component.ts","ng://sl-questionnaire/lib/radio-input/radio-input.component.ts","ng://sl-questionnaire/lib/checkbox-input/checkbox-input.component.ts","ng://sl-questionnaire/lib/ques-remarks/ques-remarks.component.ts","ng://sl-questionnaire/lib/services/utils.service.ts","ng://sl-questionnaire/lib/attachment/attachment.component.ts","ng://sl-questionnaire/lib/input/input.component.ts","ng://sl-questionnaire/lib/page-questions/page-questions.component.ts","ng://sl-questionnaire/lib/matrix-questions/matrix-questions.component.ts","ng://sl-questionnaire/lib/sl-questionnaire.module.ts","ng://sl-questionnaire/public-api.ts","ng://sl-questionnaire/sl-questionnaire.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class SlTranslateService {\n}\n","export interface IAssessmentDetails {\n  message?: string;\n  status?: number;\n  result: AssessmentInfo;\n  responseCode: string;\n}\n\nexport interface AssessmentInfo {\n  entityProfile: EntityProfile;\n  solution: Solution;\n  program: Program;\n  assessment: Assessment;\n}\n\nexport interface EntityProfile {\n  _id: string;\n  entityTypeId: string;\n  entityType: string;\n}\n\nexport interface Solution {\n  _id: string;\n  externalId: string;\n  name: string;\n  description: string;\n  registry: any[];\n  captureGpsLocationAtQuestionLevel: boolean;\n  enableQuestionReadOut: boolean;\n  scoringSystem: null;\n  isRubricDriven: boolean;\n  pageHeading: string;\n  criteriaLevelReport?: boolean;\n}\n\nexport interface Program {\n  _id: string;\n  isAPrivateProgram: boolean;\n  externalId: string;\n  name: string;\n  description: string;\n  imageCompression: ImageCompression;\n}\n\nexport interface Assessment {\n  name: string;\n  description: string;\n  externalId: string;\n  pageHeading: string;\n  submissionId: string;\n  evidences: Evidence[];\n  submissions: Submissions;\n}\n\nexport type Code = string;\n\nexport interface Evidence {\n  code: Code;\n  sections: Section[];\n  externalId: Code;\n  tip: null;\n  name: string;\n  description: null;\n  modeOfCollection: string;\n  canBeNotApplicable: boolean;\n  notApplicable: boolean;\n  canBeNotAllowed: boolean;\n  remarks: null;\n  startTime: number;\n  endTime: string;\n  isSubmitted: boolean;\n  submissions: any[];\n}\n\nexport interface Section {\n  code: string;\n  questions: Question[];\n  name: string;\n}\n\nexport interface Question {\n  _id: string;\n  question: string;\n  isCompleted: boolean;\n  showRemarks: string;\n  options: string;\n  option?:{hint:\"\",tip:\"\"}[]\n  sliderOptions: string;\n  children: string[];\n  questionGroup: string;\n  fileName: string;\n  instanceQuestions: string;\n  isAGeneralQuestion: string;\n  autoCapture: string;\n  allowAudioRecording: string;\n  prefillFromEntityProfile: string;\n  entityFieldName: string;\n  isEditable: string;\n  showQuestionInPreview: string;\n  deleted: string;\n  remarks: string;\n  value: string | string[];\n  usedForScoring: string;\n  questionType: string;\n  canBeNotApplicable: string;\n  visibleIf: VisibleIfUnion;\n  validation: string | Validation;\n  dateFormat: string;\n  externalId: string;\n  tip: string;\n  hint: string;\n  responseType: ResponseType;\n  modeOfCollection: string;\n  accessibility: string;\n  rubricLevel: string;\n  sectionHeader: string;\n  page: string;\n  questionNumber: string;\n  updatedAt: string;\n  createdAt: string;\n  __v: string;\n  createdFromQuestionId: string;\n  evidenceMethod: string;\n  payload: Payload;\n  startTime: number;\n  endTime: number;\n  gpsLocation: string;\n  file: string;\n  pageQuestions: Question[];\n}\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\nexport interface PageQuestion\n  extends Omit<Question, 'responseType' | 'pageQuestions'> {\n  value: 'pageQuestions';\n  pageQuestions: Question[];\n}\nexport interface MatrixQuestion\n  extends Omit<Question, 'responseType' | 'instanceQuestions' | 'value'> {\n  responseType: 'matix';\n  value: Array<Question[]>;\n  instanceQuestions: Question[];\n  instanceIdentifier: string;\n}\n\nexport enum ResponseType {\n  TEXT = 'text',\n  NUMBER = 'number',\n  RADIO = 'radio',\n  MULTISELECT = 'multiselect',\n  DATE = 'date',\n  SLIDER = 'slider',\n  PAGEQUESTIONS = 'pageQuestions',\n  MATRIX = 'matrix',\n}\n\nexport type FileUnion = FileClass | string;\n\nexport interface FileClass {\n  required: boolean;\n  type: string[];\n  minCount: number;\n  maxCount: number;\n  caption: string;\n}\n\nexport interface Payload {\n  criteriaId: string;\n  responseType: string;\n  evidenceMethod: Code;\n  rubricLevel: string;\n}\n\nexport interface Validation {\n  required: boolean;\n  max?: string;\n  min?: string;\n  IsNumber?: string;\n  regex: RegExp;\n}\n\nexport interface Option {\n  value: string;\n  label: string;\n}\n\nexport type VisibleIfUnion = VisibleIfElement[] | string;\n\nexport interface VisibleIfElement {\n  operator: string;\n  value: string[];\n  _id: string;\n}\n\nexport interface Submissions {}\n\nexport interface ImageCompression {\n  quality: number;\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\nimport {\n  Evidence,\n  Question,\n  ResponseType,\n} from '../interfaces/questionnaire.type';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SlQuestionnaireService {\n  private _submissionId: string;\n  constructor() {}\n  validate = (data: Question): ValidatorFn => {\n    return (control: AbstractControl): { [key: string]: any } | null => {\n      if (typeof data.validation == 'string') {\n        return null;\n      }\n      if (!data.validation.required) {\n        return null;\n      }\n      if (data.validation.regex) {\n        const forbidden = this.testRegex(data.validation.regex, control.value);\n        return forbidden ? null : { err: 'Invalid character found' };\n      }\n\n      if (data.validation.IsNumber) {\n        if (!control.value) {\n          return { err: 'Number not entered' };\n        }\n        const forbidden = !isNaN(control.value);\n        return forbidden ? null : { err: 'Only numbers allowed' };\n      }\n\n      if (data.validation.required) {\n        if (!control.value) {\n          return { err: 'Required field' };\n        }\n\n        if (data.responseType == ResponseType.MULTISELECT) {\n          return control.value.some((v) => v != '')\n            ? null\n            : { err: 'Select at least one option' };\n        }\n\n        if (data.responseType == ResponseType.SLIDER) {\n          let min = data.validation.min;\n          let max = data.validation.max;\n          return min <= control.value && control.value <= max\n            ? null\n            : { err: 'Selected value  not within range' };\n        }\n      }\n    };\n  };\n\n  public testRegex(regexExpression: RegExp, value: string): boolean {\n    const regex = new RegExp(regexExpression);\n    return regex.test(value);\n  }\n\n  setSubmissionId(submissionId: any) {\n    this._submissionId = submissionId;\n  }\n  getSubmissionId() {\n    return this._submissionId;\n  }\n\n  mapSubmissionToAssessment(data) {\n    const assessment = data.assessment;\n\n    for (const evidence of assessment.evidences) {\n      const validSubmission = assessment.submissions[evidence.externalId];\n      if (validSubmission) {\n        evidence.notApplicable = validSubmission.notApplicable;\n        if (evidence.notApplicable) {\n          continue;\n        }\n\n        for (const section of evidence.sections) {\n          for (const question of section.questions) {\n            if (question.responseType === 'pageQuestions') {\n              for (const questions of question.pageQuestions) {\n                questions.value =\n                  questions.responseType !== 'matrix'\n                    ? validSubmission.answers[questions._id].value\n                    : this.constructMatrixValue(\n                        validSubmission,\n                        questions,\n                        evidence.externalId\n                      );\n                questions.remarks = validSubmission.answers[questions._id]\n                  ? validSubmission.answers[questions._id].remarks\n                  : '';\n                questions.fileName = validSubmission.answers[questions._id]\n                  ? validSubmission.answers[questions._id].fileName\n                  : [];\n              }\n            } else if (\n              validSubmission.answers &&\n              validSubmission.answers[question._id]\n            ) {\n              question.value =\n                question.responseType !== 'matrix'\n                  ? validSubmission.answers[question._id].value\n                  : this.constructMatrixValue(\n                      validSubmission,\n                      question,\n                      evidence.externalId\n                    );\n              question.remarks = validSubmission.answers[question._id]\n                ? validSubmission.answers[question._id].remarks\n                : '';\n              question.fileName = validSubmission.answers[question._id]\n                ? validSubmission.answers[question._id].fileName\n                : [];\n            }\n          }\n        }\n      }\n    }\n\n    this.setSubmissionId(assessment.submissionId);\n    return data;\n  }\n\n  constructMatrixValue(validSubmission, matrixQuestion, ecmId) {\n    matrixQuestion.value = [];\n    if (\n      validSubmission.answers &&\n      validSubmission.answers[matrixQuestion._id] &&\n      validSubmission.answers[matrixQuestion._id].value\n    ) {\n      for (const answer of validSubmission.answers[matrixQuestion._id].value) {\n        matrixQuestion.value.push(\n          JSON.parse(JSON.stringify(matrixQuestion.instanceQuestions))\n        );\n      }\n      matrixQuestion.value.forEach((instance, index) => {\n        instance.forEach((question, instanceIndex) => {\n          if (\n            validSubmission.answers[matrixQuestion._id] &&\n            validSubmission.answers[matrixQuestion._id].value[index][\n              question._id\n            ]\n          ) {\n            question.value =\n              validSubmission.answers[matrixQuestion._id].value[index][\n                question._id\n              ].value;\n            question.remarks =\n              validSubmission.answers[matrixQuestion._id].value[index][\n                question._id\n              ].remarks;\n            question.fileName =\n              validSubmission.answers[matrixQuestion._id].value[index][\n                question._id\n              ].fileName;\n          }\n        });\n      });\n      return matrixQuestion.value;\n    } else {\n      return [];\n    }\n  }\n\n  getEvidenceData(evidence: Evidence, formValues: object) {\n    let sections = evidence.sections;\n    let answers = this.getSectionData(sections, formValues);\n    let payloadData = {\n      externalId: evidence.externalId,\n      answers: answers,\n      startTime: evidence.startTime,\n      endTime: Date.now(),\n    };\n    return payloadData;\n  }\n\n  getSectionData(sections, formValues) {\n    let answers = {};\n    for (let index = 0; index < sections.length; index++) {\n      answers = {\n        ...answers,\n        ...this.createpayload(sections[index].questions, formValues),\n      };\n    }\n    return answers;\n  }\n\n  createpayload(questions, formValues) {\n    let answers = {};\n    for (let index = 0; index < questions.length; index++) {\n      let currentQuestion = questions[index];\n      if (currentQuestion.responseType == 'pageQuestions') {\n        answers = {\n          ...answers,\n          ...this.createpayload(currentQuestion.pageQuestions, formValues),\n        };\n        continue;\n      }\n      if (currentQuestion.responseType == 'matrix') {\n        for (let index = 0; index < currentQuestion.value.length; index++) {\n          formValues[currentQuestion._id][index] = this.createpayload(\n            currentQuestion.value[index],\n            formValues[currentQuestion._id][index]\n          );\n        }\n      }\n\n      let perQuestionData = this.formatToPayload(currentQuestion, formValues);\n      answers[currentQuestion._id] = perQuestionData;\n    }\n\n    return answers;\n  }\n\n  formatToPayload(currentQuestion, formValues) {\n    let value =\n      currentQuestion.responseType != 'matrix'\n        ? currentQuestion.value\n        : formValues[currentQuestion._id];\n    return {\n      qid: currentQuestion._id,\n      value: value,\n      remarks: currentQuestion.remarks,\n      fileName: currentQuestion.fileName, //todo,\n      gpsLocation: '',\n      payload: {\n        question: currentQuestion.question,\n        labels: formValues[currentQuestion._id],\n        responseType: currentQuestion.responseType,\n        filesNotUploaded: [], //todo\n      },\n      startTime: currentQuestion.startTime,\n      endTime: currentQuestion.endTime,\n      criteriaId: currentQuestion.payload.criteriaId,\n      responseType: currentQuestion.responseType,\n      evidenceMethod: currentQuestion.evidenceMethod,\n      rubricLevel: '',\n    };\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Question } from '../interfaces/questionnaire.type';\nimport { SlTranslateService } from '../services/translate.service';\nimport { SlQuestionnaireService } from '../services/sl-questionnaire.service';\n\n@Component({\n  selector: 'sl-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.scss'],\n})\nexport class TextInputComponent implements OnInit {\n  text: string;\n  @Input() questionnaireForm: FormGroup;\n  @Input() question : Question;\n  placeholder;\n\n  constructor(\n    private qService: SlQuestionnaireService,\n    private translate: SlTranslateService\n  ) {}\n\n  ngOnInit() {\n    this.placeholder = this.translate['frmelmnts'].lbl.enterResponse;\n    setTimeout(() => {\n      this.questionnaireForm.addControl(\n        this.question._id,\n        new FormControl(this.question.value || null, [\n          this.qService.validate(this.question),\n        ])\n      );\n\n      this.question.startTime = this.question.startTime\n        ? this.question.startTime\n        : Date.now();\n    });\n  }\n\n  get isValid(): boolean {\n    return this.questionnaireForm.controls[this.question._id].valid;\n  }\n\n  get isTouched(): boolean {\n    return this.questionnaireForm.controls[this.question._id].touched;\n  }\n  onChange(e: Event) {\n    let value = (e.target as HTMLInputElement).value;\n    this.question.value = value;\n    this.question.endTime = Date.now();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Question, Validation } from '../interfaces/questionnaire.type';\nimport { SlTranslateService } from '../services/translate.service';\nimport { SlQuestionnaireService } from '../services/sl-questionnaire.service';\n\n@Component({\n  selector: 'sl-date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.scss'],\n})\nexport class DateInputComponent implements OnInit {\n  date: any;\n  min: Date;\n  max: Date;\n\n  @Input() questionnaireForm: FormGroup;\n  @Input() question: Question;\n  @Input() autoCaptureText: String;\n\n  constructor(\n    private qService: SlQuestionnaireService,\n    private translate: SlTranslateService\n  ) {}\n\n  ngOnInit() {\n    this.autoCaptureText = this.translate['frmelmnts'].btn?.autoCapture;\n    setTimeout(() => {\n      this.questionnaireForm.addControl(\n        this.question._id,\n        new FormControl(\n          this.question.value ? new Date(this.question.value as string) : null,\n          [this.qService.validate(this.question)]\n        )\n      );\n\n      this.question.startTime = this.question.startTime\n        ? this.question.startTime\n        : Date.now();\n    });\n    this.min = (this.question.validation as Validation).min\n      ? new Date((this.question.validation as Validation).min)\n      : null;\n    this.max = (this.question.validation as Validation).max\n      ? new Date((this.question.validation as Validation).max)\n      : null;\n  }\n\n  onChange(e: string) {\n    let value = e;\n    this.question.value = value;\n    this.question.endTime = Date.now();\n  }\n\n  autoCapture() {\n    this.questionnaireForm.controls[this.question._id].patchValue(\n      new Date(Date.now())\n    );\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Question } from '../interfaces/questionnaire.type';\nimport { SlTranslateService } from '../services/translate.service';\nimport { SlQuestionnaireService } from '../services/sl-questionnaire.service';\n\n@Component({\n  selector: 'sl-number-input',\n  templateUrl: './number-input.component.html',\n  styleUrls: ['./number-input.component.scss'],\n})\nexport class NumberInputComponent implements OnInit {\n  placeholder;\n  response: string;\n  @Input() questionnaireForm: FormGroup;\n  @Input() question: Question;\n  constructor(\n    private qService: SlQuestionnaireService,\n    private translate: SlTranslateService\n  ) {}\n\n  ngOnInit() {\n    this.placeholder = this.translate['frmelmnts']?.lbl?.enterResponse;\n    setTimeout(() => {\n      this.questionnaireForm.addControl(\n        this.question._id,\n        new FormControl(this.question.value || null, [\n          this.qService.validate(this.question),\n        ])\n      );\n      this.question.startTime = this.question.startTime\n        ? this.question.startTime\n        : Date.now();\n    });\n  }\n  onChange(e: Event) {\n    let value = (e.target as HTMLInputElement).value;\n    this.question.value = value;\n\n    this.question.endTime = Date.now();\n  }\n\n  get isValid(): boolean {\n    return this.questionnaireForm.controls[this.question._id].valid;\n  }\n\n  get isTouched(): boolean {\n    return this.questionnaireForm.controls[this.question._id].touched;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Question } from '../interfaces/questionnaire.type';\nimport { SlQuestionnaireService } from '../services/sl-questionnaire.service';\n\n@Component({\n  selector: 'sl-range-input',\n  templateUrl: './range-input.component.html',\n  styleUrls: ['./range-input.component.scss'],\n})\nexport class RangeInputComponent implements OnInit {\n  @Input() questionnaireForm: FormGroup;\n  @Input() question: Question;\n  constructor(public qService: SlQuestionnaireService) {}\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.questionnaireForm.addControl(\n        this.question._id,\n        new FormControl(this.question.value || null, [\n          this.qService.validate(this.question),\n        ])\n      );\n      this.question.startTime = this.question.startTime\n        ? this.question.startTime\n        : Date.now();\n    });\n  }\n\n  onChange(e: Event) {\n    let value = (e.target as HTMLInputElement).value;\n    this.question.value = value;\n    this.question.endTime = Date.now();\n  }\n\n  get isValid(): boolean {\n    return this.questionnaireForm.controls[this.question._id].valid;\n  }\n\n  get isTouched(): boolean {\n    return this.questionnaireForm.controls[this.question._id].touched;\n  }\n\n  get min() {\n    if (typeof this.question.validation == 'string') {\n      return null;\n    }\n    return this.question.validation.min;\n  }\n\n  get max() {\n    if (typeof this.question.validation == 'string') {\n      return null;\n    }\n    return this.question.validation.max;\n  }\n}\n","import { Output } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { Component, EventEmitter, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Question } from '../interfaces/questionnaire.type';\nimport { SlTranslateService } from '../services/translate.service';\nimport { SlQuestionnaireService } from '../services/sl-questionnaire.service';\n\n@Component({\n  selector: 'sl-radio-input',\n  templateUrl: './radio-input.component.html',\n  styleUrls: ['./radio-input.component.scss'],\n})\nexport class RadioInputComponent implements OnInit {\n  @Input() options: any;\n  @Input() questionnaireForm: FormGroup;\n  @Input() question: Question;\n  hintCloseText: string;\n  @Output() dependentParent = new EventEmitter<Question>();\n  isDimmed: any;\n  hint: any;\n\n  constructor(\n    public qService: SlQuestionnaireService,\n    public translate: SlTranslateService\n  ) {}\n\n  ngOnInit() {\n    this.hintCloseText = this.translate['frmelmnts'].btn?.close;\n    setTimeout(() => {\n      this.questionnaireForm.addControl(\n        this.question._id,\n        new FormControl(\n          this.question.value || null,\n          this.qService.validate(this.question)\n        )\n      );\n\n      this.question.startTime = this.question.startTime\n        ? this.question.startTime\n        : Date.now();\n      if (this.question.value) {\n        if (this.question.children.length) {\n          this.dependentParent.emit(this.question);\n        }\n      }\n    });\n  }\n\n  get isValid(): boolean {\n    return this.questionnaireForm.controls[this.question._id].valid;\n  }\n\n  get isTouched(): boolean {\n    return this.questionnaireForm.controls[this.question._id].touched;\n  }\n\n  onChange(value) {\n    this.questionnaireForm.controls[this.question._id].setValue(value);\n    this.question.value = value;\n    this.question.endTime = Date.now();\n    if (this.question.children.length) {\n      this.dependentParent.emit(this.question);\n    }\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormArray, FormControl, FormGroup } from '@angular/forms';\nimport { Question } from '../interfaces/questionnaire.type';\nimport { SlTranslateService } from '../services/translate.service';\nimport { SlQuestionnaireService } from '../services/sl-questionnaire.service';\n\n@Component({\n  selector: 'sl-checkbox-input',\n  templateUrl: './checkbox-input.component.html',\n  styleUrls: ['./checkbox-input.component.scss'],\n})\nexport class CheckboxInputComponent implements OnInit {\n  @Input() options;\n  @Input() questionnaireForm: FormGroup;\n  @Input() question: Question;\n  hintCloseText: string;\n  @Output() dependentParent = new EventEmitter<Question>();\n  isDimmed: any;\n  hint: any;\n  constructor(\n    public qService: SlQuestionnaireService,\n    public translate: SlTranslateService\n  ) {}\n\n  ngOnInit() {\n    this.hintCloseText = this.translate['frmelmnts'].btn?.close;\n    setTimeout(() => {\n      const optionControl = this.options.map((v) => {\n        if (\n          this.question.value &&\n          (this.question.value as Array<string>).find((_v) => _v == v.value)\n        ) {\n          return new FormControl(v.value);\n        }\n        return new FormControl('');\n      });\n\n      this.questionnaireForm.addControl(\n        this.question._id,\n        new FormArray(optionControl, this.qService.validate(this.question))\n      );\n\n      this.question.startTime = this.question.startTime\n        ? this.question.startTime\n        : Date.now();\n      if (this.question.value.length) {\n        if (this.question.children.length) {\n          this.dependentParent.emit(this.question);\n        }\n      }\n    });\n  }\n\n  onChange(oId: string, isChecked: boolean, oIndex: number) {\n    const formArray: FormArray = this.questionnaireForm.get(\n      this.question._id\n    ) as FormArray;\n    if (isChecked) {\n      formArray.controls[oIndex].patchValue(oId);\n    }\n    this.question.value =\n      this.questionnaireForm.controls[this.question._id].value;\n    this.question.value = (this.question.value as Array<string>).filter(\n      Boolean\n    );\n    this.question.endTime = Date.now();\n    if (this.question.children.length) {\n      this.dependentParent.emit(this.question);\n    }\n  }\n\n  get isValid(): boolean {\n    return this.questionnaireForm.controls[this.question._id].valid;\n  }\n\n  get isTouched(): boolean {\n    return this.questionnaireForm.controls[this.question._id].touched;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Question } from '../interfaces/questionnaire.type';\nimport { SlTranslateService } from '../services/translate.service';\n\n@Component({\n  selector: 'sl-ques-remarks',\n  templateUrl: './ques-remarks.component.html',\n  styleUrls: ['./ques-remarks.component.scss'],\n})\nexport class QuesRemarksComponent implements OnInit {\n  remark = '';\n  showRemarks;\n\n  @Output() saveClicked = new EventEmitter();\n  @Input() question: Question;\n  title: String;\n  remarksAddText: String;\n  constructor(private translate: SlTranslateService) {}\n\n  ngOnInit() {\n    this.title = this.translate['frmelmnts'].lbl?.remark_title;\n    this.remarksAddText = this.translate['frmelmnts'].btn.add;\n    this.remark = this.question.remarks;\n    this.remark ? (this.showRemarks = true) : false;\n  }\n  saveRemark() {\n    this.question.remarks = this.remark;\n    this.saveClicked.emit({ value: this.remark });\n  }\n\n  deleteRemark() {\n    this.remark = '';\n    this.saveRemark();\n    this.showRemarks = false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { SuiModalService } from 'ng2-semantic-ui-v9';\nimport { AlertMeta } from '../interfaces/alert.type';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class SlUtilsService {\n  constructor(public modalService: SuiModalService) {}\n\n  /**\n   * @param {AlertMeta}  meta: Alert Meta Form Object\n   * @param {String} meta.title Optional ! Display title of alert fields\n   * @param {String}  meta.size Provide size of alert.('tiny','mini)\n   * @param {AlertBodyType}  meta.bodyType Alert-content type to show in alert body\n   * @param {String}  meta.data content to show\n   * @param {String}  meta.buttonClass class to apply on button div\n   * @param {String}  meta.acceptText text to show in accept button\n   * @param {String}  meta.cancelText text to show in accept button\n   * @param {String}  meta.type Optional ! To set type of alert\n   * @param {Boolean}  meta.closeIcon Optional ! Show top right close icon , default = false\n   */\n  alert(meta: AlertMeta) {\n    const button = [];\n    meta.acceptText &&\n      button.push({\n        type: 'accept',\n        returnValue: true,\n        buttonText: meta.acceptText,\n      });\n    meta.cancelText &&\n      button.push({\n        type: 'cancel',\n        returnValue: false,\n        buttonText: meta.cancelText,\n      });\n\n    let alertMeta = {\n      type: meta.type,\n      size: meta.size,\n      isClosed: meta.closeIcon,\n      content: {\n        title: meta.title,\n        body: {\n          type: meta.bodyType,\n          data: meta.data,\n        },\n      },\n      footer: {\n        className: meta.buttonClass,\n        buttons: button,\n      },\n    };\n\n    return this.openAlert(alertMeta);\n  }\n\n  abstract openAlert(data): Promise<any>;\n\n  abstract error(msg);\n\n  abstract getPreSingedUrls(payload);\n\n  abstract cloudStorageUpload(payload);\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AlertMeta } from '../interfaces/alert.type';\nimport { SlTranslateService } from '../services/translate.service';\nimport { SlUtilsService } from '../services/utils.service';\n\n@Component({\n  selector: 'sl-attachment',\n  templateUrl: './attachment.component.html',\n  styleUrls: ['./attachment.component.scss'],\n})\nexport class AttachmentComponent implements OnInit {\n  @Input() data;\n  formData;\n  constructor(\n    private translate: SlTranslateService,\n    private utils: SlUtilsService\n  ) {}\n\n  ngOnInit(): void {}\n\n  basicUpload(files: File[]) {\n    let sizeMB = +(files[0].size / 1000 / 1000).toFixed(4);\n    if (sizeMB > 20) {\n      this.fileLimitCross();\n      return;\n    }\n    this.formData = new FormData();\n    Array.from(files).forEach((f) => this.formData.append('file', f));\n    this.preSignedUrl(this.getFileNames(this.formData));\n  }\n\n  fileLimitCross() {\n    const alertMeta: AlertMeta = {\n      size: 'tiny',\n      bodyType: 'text',\n      data: this.translate['frmelmnts'].alert.fileLimitCross20,\n      buttonClass: 'single-btn',\n      acceptText: this.translate['frmelmnts'].btn.ok,\n      cancelText: null,\n    };\n    this.utils.alert(alertMeta);\n  }\n\n  getFileNames(formData) {\n    let files = [];\n    formData.forEach((element) => {\n      files.push(element.name);\n    });\n    return files;\n  }\n\n  preSignedUrl(files) {\n    let payload = {};\n    payload['ref'] = 'survey';\n    payload['request'] = {};\n    payload['request'][this.data.submissionId] = {\n      files: files,\n    };\n    this.utils.getPreSingedUrls(payload).subscribe(\n      (imageData) => {\n        const presignedUrlData =\n          imageData['result'][this.data.submissionId].files[0];\n        this.formData.append('url', presignedUrlData.url);\n        this.utils.cloudStorageUpload(this.formData).subscribe(\n          (success: any) => {\n            if (success.status === 200) {\n              const obj = {\n                name: this.getFileNames(this.formData)[0],\n                url: presignedUrlData.url.split('?')[0],\n              };\n              for (const key of Object.keys(presignedUrlData.payload)) {\n                obj[key] = presignedUrlData['payload'][key];\n              }\n              this.data.files.push(obj);\n              const alertMeta: AlertMeta = {\n                size: 'tiny',\n                bodyType: 'text',\n                data: this.translate['frmelmnts'].alert.evidenceUploaded,\n                buttonClass: 'single-btn',\n                acceptText: this.translate['frmelmnts'].btn.ok,\n                cancelText: null,\n                type: 'uploaded',\n              };\n              this.utils.alert(alertMeta);\n            } else {\n              this.utils.error(\n                this.translate['frmelmnts'].message.unableToUpload\n              );\n            }\n          },\n          (error) => {\n            this.utils.error(\n              this.translate['frmelmnts'].message.unableToUpload\n            );\n          }\n        );\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  extension(name) {\n    return name.split('.').pop();\n  }\n  openFile(file) {\n    window.open(file.url, '_blank');\n  }\n\n  async deleteAttachment(fileIndex) {\n    const alertMeta: AlertMeta = {\n      size: 'mini',\n      bodyType: 'text',\n      data: this.translate['frmelmnts'].alert.confirmEvidenceDelete,\n      buttonClass: 'double-btn',\n      acceptText: this.translate['frmelmnts'].btn.ok,\n      cancelText: this.translate['frmelmnts'].btn.no,\n    };\n    const accepted = await this.utils.alert(alertMeta);\n\n    if (!accepted) {\n      return;\n    }\n    this.data.files.splice(fileIndex, 1);\n  }\n\n  async onAddApproval(file) {\n    let html = `\n    ${this.translate['frmelmnts'].alert.evidence_content_policy}<a href='/term-of-use.html' target=\"_blank\">${this.translate['frmelmnts'].alert.evidence_content_policy_label}</a> .${this.translate['frmelmnts'].alert.uploadevidencecontent}\n    `;\n    const alertMeta: AlertMeta = {\n      size: 'tiny',\n      bodyType: 'checkbox',\n      data: html,\n      buttonClass: 'double-btn',\n      acceptText: this.translate['frmelmnts'].btn.upload,\n      cancelText: this.translate['frmelmnts'].btn.donotupload,\n    };\n    let returnData = await this.utils.alert(alertMeta);\n    if (!returnData) {\n      this.notAccepted();\n      return;\n    }\n    file.click();\n  }\n\n  notAccepted(): void {\n    const alertMeta: AlertMeta = {\n      size: 'tiny',\n      bodyType: 'text',\n      data: this.translate['frmelmnts'].alert.uploadTermsRejected,\n      buttonClass: 'single-btn',\n      acceptText: this.translate['frmelmnts'].btn.ok,\n      cancelText: null,\n      type: 'notAccepted',\n    };\n    this.utils.alert(alertMeta);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Question, ResponseType } from '../interfaces/questionnaire.type';\nimport { SlTranslateService } from '../services/translate.service';\nimport { SlQuestionnaireService } from '../services/sl-questionnaire.service';\n\n@Component({\n  selector: 'sl-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n})\nexport class InputComponent {\n  @Input() questions: Array<Question>;\n  @Input() questionnaireForm: FormGroup;\n  selectedIndex: number;\n  dimmerIndex;\n  isDimmed;\n  dimmerCloseText = this.translate['frmelmnts'].btn.close;\n\n  constructor(private translate: SlTranslateService,public qService:SlQuestionnaireService) {}\n\n  public get reponseType(): typeof ResponseType {\n    return ResponseType;\n  }\n\n  toggleQuestion(parent) {\n    const { children } = parent;\n\n    this.questions.map((q, i) => {\n      if (children.includes(q._id)) {\n        let child = this.questions[i];\n        child['canDisplay'] = this.canDisplayChildQ(child, i);\n        if (child['canDisplay'] == false) {\n          child.value = '';\n          this.questionnaireForm.removeControl(child._id);\n        }\n      }\n    });\n  }\n\n  canDisplayChildQ(currentQuestion: Question, currentQuestionIndex: number) {\n    let display = true;\n    if (typeof currentQuestion.visibleIf == 'string' || null || undefined) {\n      return false; //if condition not present\n    }\n    for (const question of this.questions) {\n      for (const condition of currentQuestion.visibleIf) {\n        if (condition._id === question._id) {\n          let expression = [];\n          if (condition.operator != '===') {\n            if (question.responseType === 'multiselect') {\n              for (const parentValue of question.value) {\n                for (const value of condition.value) {\n                  expression.push(\n                    '(',\n                    \"'\" + parentValue + \"'\",\n                    '===',\n                    \"'\" + value + \"'\",\n                    ')',\n                    condition.operator\n                  );\n                }\n              }\n            } else {\n              for (const value of condition.value) {\n                expression.push(\n                  '(',\n                  \"'\" + question.value + \"'\",\n                  '===',\n                  \"'\" + value + \"'\",\n                  ')',\n                  condition.operator\n                );\n              }\n            }\n            expression.pop();\n          } else {\n            if (question.responseType === 'multiselect') {\n              for (const value of question.value) {\n                expression.push(\n                  '(',\n                  \"'\" + condition.value + \"'\",\n                  '===',\n                  \"'\" + value + \"'\",\n                  ')',\n                  '||'\n                );\n              }\n              expression.pop();\n            } else {\n              expression.push(\n                '(',\n                \"'\" + question.value + \"'\",\n                condition.operator,\n                \"'\" + condition.value + \"'\",\n                ')'\n              );\n            }\n          }\n          if (!eval(expression.join(''))) {\n            this.questions[currentQuestionIndex].isCompleted = true;\n            return false;\n          } else {\n            // this.questions[currentQuestionIndex].isCompleted =\n            //   this.utils.isQuestionComplete(currentQuestion);\n          }\n        }\n      }\n    }\n    return display;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { PageQuestion } from '../interfaces/questionnaire.type';\n\n@Component({\n  selector: 'sl-page-questions',\n  templateUrl: './page-questions.component.html',\n  styleUrls: ['./page-questions.component.css'],\n})\nexport class PageQuestionsComponent implements OnInit {\n  @Input() questionnaireForm: FormGroup;\n  @Input() question: PageQuestion;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport {\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport {\n  ModalTemplate,\n  SuiModalService,\n  TemplateModalConfig,\n} from 'ng2-semantic-ui-v9';\nimport { MatrixQuestion, Question } from '../interfaces/questionnaire.type';\nimport { SlTranslateService } from '../services/translate.service';\nimport * as _ from 'lodash-es';\nimport { AlertMeta } from '../interfaces/alert.type';\nimport { SlUtilsService } from '../services/utils.service';\n\nexport interface IContext {\n  questions: Question[];\n  heading: string;\n  index: number;\n}\n@Component({\n  selector: 'sl-matrix-questions',\n  templateUrl: './matrix-questions.component.html',\n  styleUrls: ['./matrix-questions.component.css'],\n})\nexport class MatrixQuestionsComponent implements OnInit {\n  addText: string;\n  submitText: string;\n  cancelText: string;\n  @Input() questionnaireForm: FormGroup;\n  @Input() question: MatrixQuestion;\n  matrixForm: FormGroup;\n  @ViewChild('modalTemplate')\n  public modalTemplate: ModalTemplate<IContext, string, string>;\n  context: IContext;\n  showBadgeAssingModel: boolean;\n  constructor(\n    private translate: SlTranslateService,\n    public modalService: SuiModalService,\n    public fb: FormBuilder,\n    private utils: SlUtilsService\n  ) {}\n\n  ngOnInit(): void {\n    this.addText = this.translate['frmelmnts'].btn.add;\n    this.submitText = this.translate['frmelmnts'].btn.submit;\n    this.cancelText = this.translate['frmelmnts'].btn.cancel;\n    setTimeout(() => {\n      this.matrixForm = this.fb.group({}, Validators.required);\n      this.questionnaireForm.addControl(\n        this.question._id,\n        new FormArray([], [Validators.required])\n      );\n      this.initializeMatrix();\n    });\n  }\n  initializeMatrix() {\n    let valid = true;\n    if (this.question.value.length) {\n      this.question.value.map((v) => {\n        let obj = {};\n        v.forEach((ques) => {\n          if (!ques.value) return;\n          obj[ques._id] = ques.value;\n        });\n        (this.questionnaireForm.controls[this.question._id] as FormArray).push(\n          new FormControl(obj)\n        );\n        if (_.isEmpty(obj)) {\n          valid = false;\n        }\n      });\n    }\n\n    if (!valid)\n      this.questionnaireForm.controls[this.question._id].setErrors({\n        err: 'Matrix reposne not valid',\n      });\n  }\n\n  addInstances(): void {\n    this.question.value = this.question.value ? this.question.value : [];\n    this.question.value.push(\n      JSON.parse(JSON.stringify(this.question.instanceQuestions))\n    );\n    this.matrixForm.reset();\n    this.formAsArray.push(new FormControl([], [Validators.required]));\n  }\n\n  viewInstance(i): void {\n    this.matrixForm.reset();\n    if (this.formAsArray.controls[i].value) {\n      this.matrixForm.patchValue(this.formAsArray.controls[i].value);\n    }\n    const config = new TemplateModalConfig<IContext, string, string>(\n      this.modalTemplate\n    );\n    config.closeResult = 'closed!';\n    config.context = {\n      questions: this.question.value[i],\n      heading: `${this.question.instanceIdentifier} ${i + 1}`,\n      index: i,\n    };\n    this.context = config.context;\n    this.showBadgeAssingModel = true;\n  }\n\n  get formAsArray() {\n    return this.questionnaireForm.controls[this.question._id] as FormArray;\n  }\n\n  matrixSubmit(index) {\n    this.showBadgeAssingModel = false;\n    this.formAsArray.at(index).patchValue(this.matrixForm.value);\n    if (this.matrixForm.invalid) {\n      this.formAsArray.at(index).setErrors({ err: 'Matrix reposne not valid' });\n    }\n  }\n\n  async deleteInstanceAlert(index) {\n    // let metaData = await this.observationUtilService.getAlertMetaData();\n    // metaData.content.body.data =\n    //   this.resourceService.frmelmnts.lbl.deleteSubmission;\n    // metaData.content.body.type = 'text';\n    // metaData.content.title = this.resourceService.frmelmnts.btn.delete;\n    // metaData.size = 'mini';\n    // metaData.footer.buttons.push({\n    //   type: 'cancel',\n    //   returnValue: false,\n    //   buttonText: this.resourceService.frmelmnts.btn.no,\n    // });\n    // metaData.footer.buttons.push({\n    //   type: 'accept',\n    //   returnValue: true,\n    //   buttonText: this.resourceService.frmelmnts.btn.yes,\n    // });\n    // metaData.footer.className = 'double-btn';\n    // const accepted = await this.observationUtilService.showPopupAlert(metaData);\n    const alertMeta: AlertMeta = {\n      title: this.translate['frmelmnts'].alert.uploadTermsRejected,\n      size: 'mini',\n      bodyType: 'text',\n      data: this.translate['frmelmnts'].lbl.deleteSubmission,\n      buttonClass: 'double-btn',\n      acceptText: this.translate['frmelmnts'].btn.yes,\n      cancelText: this.translate['frmelmnts'].btn.no,\n    };\n    const accepted = this.utils.alert(alertMeta);\n    if (!accepted) {\n      return;\n    }\n\n    this.question.value.splice(index, 1);\n    (this.questionnaireForm.controls[this.question._id] as FormArray).removeAt(\n      index\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TextInputComponent } from './text-input/text-input.component';\nimport { DateInputComponent } from './date-input/date-input.component';\nimport { SuiModule } from 'ng2-semantic-ui-v9';\nimport { NumberInputComponent } from './number-input/number-input.component';\nimport { RangeInputComponent } from './range-input/range-input.component';\nimport { RadioInputComponent } from './radio-input/radio-input.component';\nimport { CheckboxInputComponent } from './checkbox-input/checkbox-input.component';\nimport { QuesRemarksComponent } from './ques-remarks/ques-remarks.component';\nimport { AttachmentComponent } from './attachment/attachment.component';\nimport { InputComponent } from './input/input.component';\nimport { PageQuestionsComponent } from './page-questions/page-questions.component';\nimport { MatrixQuestionsComponent } from './matrix-questions/matrix-questions.component';\n\n@NgModule({\n  declarations: [\n    TextInputComponent,\n    DateInputComponent,\n    NumberInputComponent,\n    RangeInputComponent,\n    RadioInputComponent,\n    CheckboxInputComponent,\n    QuesRemarksComponent,\n    AttachmentComponent,\n    InputComponent,\n    PageQuestionsComponent,\n    MatrixQuestionsComponent,\n  ],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, SuiModule],\n  exports: [\n    TextInputComponent,\n    DateInputComponent,\n    NumberInputComponent,\n    RangeInputComponent,\n    RadioInputComponent,\n    CheckboxInputComponent,\n    QuesRemarksComponent,\n    AttachmentComponent,\n    InputComponent,\n    PageQuestionsComponent,\n    MatrixQuestionsComponent,\n  ],\n})\nexport class SlQuestionnaireModule {}\n","/*\n * Public API Surface of sl-questionnaire\n */\n\nexport * from './lib/sl-questionnaire.module';\n\nexport * from './lib/text-input/text-input.component';\nexport * from './lib/date-input/date-input.component';\nexport * from './lib/number-input/number-input.component';\nexport * from './lib/range-input/range-input.component';\nexport * from './lib/radio-input/radio-input.component';\nexport * from './lib/checkbox-input/checkbox-input.component';\nexport * from './lib/ques-remarks/ques-remarks.component';\nexport * from './lib/attachment/attachment.component';\nexport * from './lib/input/input.component';\nexport * from './lib/matrix-questions/matrix-questions.component'\nexport * from './lib/page-questions/page-questions.component';\n\nexport * from './lib/interfaces/questionnaire.type';\nexport * from './lib/interfaces/alert.type';\n\nexport * from './lib/services/translate.service';\nexport * from './lib/services/utils.service';\nexport * from './lib/services/sl-questionnaire.service';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["_.isEmpty"],"mappings":"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"}